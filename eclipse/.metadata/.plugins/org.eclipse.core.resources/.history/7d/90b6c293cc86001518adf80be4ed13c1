package com.ashindigo.utils;

import java.awt.List;
import java.lang.reflect.Field;
import java.util.ArrayList;

import com.ashindigo.alloycraft.AlloycraftItems;

import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.Entity;
import net.minecraft.item.Item;
import net.minecraft.item.ItemArmor;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ItemArmor.ArmorMaterial;
import net.minecraftforge.common.util.EnumHelper;

/**
* An Item class which automatically registers the item that is being added.
* @author Ash Indigo
*/
public class UtilsItem extends Item {
	
	static ArrayList listitem = new ArrayList();
	static int runtime = 0;
	static String MODID;
	public static String textureName;
	static Item armor;
	public static ArrayList itemlists = new ArrayList();
	
	public UtilsItem(String modid, String name){
		setUnlocalizedName(modid + "_" + name);
		setCreativeTab(CreativeTabs.tabMisc);
		setTextureName(modid + ":" + name);
		listitem.add(name);
		MODID = modid;
		this.textureName = name;
	}

	public UtilsItem() {
		// TODO Auto-generated constructor stub
	}
	
	/**
	 * Method that starts the automatic registration of items and armor.
	 * Call in init method
	 * See:{@link UtilsMain.init}
	 * Version 1.1
	 */
	public static void register() {
		
		while(runtime < listitem.size()){
		GameRegistry.registerItem((Item) itemlists.get(runtime), ("indigoapiitems" + MODID + runtime));
		runtime++;
		}
	}
	/**
	 * Class for making armor that also adds the recipes for armor
	 * @author 19jasonides_a
	 */
	public static class UtilsArmor extends ItemArmor{
		
		public UtilsArmor(ArmorMaterial p_i45325_1_, int p_i45325_2_, int p_i45325_3_) {
			super(p_i45325_1_, p_i45325_2_, p_i45325_3_);
			// TODO Auto-generated constructor stub
		}
		
		public UtilsArmor(String unlocalizedName, ArmorMaterial material, int type, String modid, Item mat) {
		    super(material, 0, type);
		    textureName = unlocalizedName;
		    this.setUnlocalizedName(modid + "_" + unlocalizedName);
		    this.setTextureName(modid + ":" + unlocalizedName);
		    setCreativeTab(CreativeTabs.tabCombat);
		    listitem.add(unlocalizedName);
		    armor = this;
		}
		
		public static void registerRecipes(){
			
		}

		/**
		 * Armor texture method
		 */
		@Override
		public String getArmorTexture(ItemStack stack, Entity entity, int slot, String type)
		{
		    return MODID + ":armor/" + textureName + "_" + (this.armorType == 2 ? "2" : "1") + ".png";
		}
	}
}
